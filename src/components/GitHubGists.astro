<section>
  <h3>My GitHub Gists</h3>
  <div class="grid grid-cols-1 gap-2 lg:grid-cols-3" id="gists"></div>
</section>
<script>
  // https://github.com/octokit/octokit.js
  import { Octokit } from "octokit";

  // To generate token: https://docs.github.com/en/enterprise-server@3.9/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens
  const octokit = new Octokit({
    auth: import.meta.env.PUBLIC_GITHUB_TOKEN,
  });

  // Fetch our gists with Octokit + handle error if fetch fails
  async function getGists() {
    // Modify username here
    return await octokit
      .request("GET /users/ChrisLaRocque/gists", {
        headers: {
          "X-GitHub-Api-Version": "2022-11-28",
        },
      })
      .catch(() => {
        // Show error in UI if fetch fails
        const oops = document.createElement("p");
        oops.innerText = "Oops, couldn't fetch gists from GitHub";
        gistsDiv?.appendChild(oops);
      });
  }
  // Get the parent element we'll add our gists to
  const gistsDiv = document.getElementById("gists");

  // Run fetch above
  const { data } = await getGists();

  // Loop through each returned gist and create a card for it
  for (let i = 0; i < data.length; i++) {
    const { id, description, updated_at, html_url, files } = data[i];
    // The 'files' array contains objects where the key is the file name, so we get each key to show the names of the file
    const fileNames = Object.keys(files);

    // Create card as an anchor tag
    const gistCard = document.createElement("a");
    gistCard.setAttribute("id", id);
    gistCard.setAttribute("href", html_url);
    gistCard.setAttribute(
      "class",
      "p-4 border-2 border-white rounded flex flex-col justify-between"
    );

    // Create + append file name heading
    const heading = document.createElement("h4");
    heading.setAttribute(
      "class",
      "text-md font-bold tracking-tight text-slate-400"
    );
    heading.innerText = fileNames[0];
    gistCard.appendChild(heading);

    // Create + append description text
    const text = document.createElement("p");
    text.setAttribute("class", "text-sm");
    text.innerText = description;
    gistCard.appendChild(text);

    // Create + append update at text
    const updatedAt = document.createElement("small");
    updatedAt.setAttribute("class", "text-slate-400");
    updatedAt.innerText = new Date(updated_at).toLocaleDateString(undefined, {
      day: "numeric",
      month: "short",
      year: "numeric",
    });
    gistCard.appendChild(updatedAt);

    // Add card div to parent
    gistsDiv?.appendChild(gistCard);
  }
</script>
